name: Build Test (Beta and Nightly)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-beta-nightly:
    name: "Build for ${{ matrix.config.TARGET }} (on ${{ matrix.config.OS }}) [args: ${{ matrix.BUILD_ARGS }}]"
    runs-on: ${{ matrix.config.OS }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { OS: ubuntu-latest, TARGET: "x86_64-unknown-linux-gnu" }
          - { OS: ubuntu-latest, TARGET: "x86_64-unknown-linux-musl" }
          - { OS: ubuntu-latest, TARGET: "i686-unknown-linux-gnu" }
          - { OS: ubuntu-latest, TARGET: "i686-unknown-linux-musl" }
          # - { OS: ubuntu-latest, TARGET: "armv5te-unknown-linux-gnueabi" }
          - {
              OS: ubuntu-latest,
              TARGET: "armv7-unknown-linux-gnueabihf"
            }
          - { OS: ubuntu-latest, TARGET: "aarch64-unknown-linux-gnu" }
          - { OS: ubuntu-latest, TARGET: "aarch64-unknown-linux-musl" }
          # - { OS: ubuntu-latest, TARGET: "x86_64-pc-windows-gnu" }
          - { OS: macos-latest, TARGET: "x86_64-apple-darwin" }
          - { OS: macos-latest, TARGET: "aarch64-apple-darwin" }
          - { OS: windows-latest, TARGET: "x86_64-pc-windows-msvc" }
          - { OS: windows-latest, TARGET: "i686-pc-windows-msvc" }
        TOOLCHAIN: [ beta, nightly ]
        BUILD_ARGS: [ "", "--features use-native-certs" ]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.TOOLCHAIN }}
          target: ${{ matrix.config.TARGET }}
          override: true
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.config.TARGET }} ${{ matrix.BUILD_ARGS }}
